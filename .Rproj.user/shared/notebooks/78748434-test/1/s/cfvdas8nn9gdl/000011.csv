"0",""
"0",""
"0","rep <- 10 #normalement sur 550 essais mais tournerait trop longtemps"
"0","L_coeffs <- list()"
"0","prediction <- matrix(NA,nrow = 2066,ncol = rep*2)"
"0",""
"0",""
"0","T1<-Sys.time()"
"0","for (b in 1:rep) { "
"0","  # subset de données "
"0","  set.seed(b)"
"0","  select_indiv <- part_data(forest,freq_cover)"
"0","  Ytrain <- Cov_type[select_indiv[[1]]] "
"0","  Ytest <- Cov_type[select_indiv[[2]]] "
"0","  Xtrain <- Xforest_red_cr[select_indiv[[1]],] "
"0","  Xtest <- Xforest_red_cr[select_indiv[[2]],]"
"0","  "
"0","  # Introduction des interactions dans le modèle"
"0","  f <- as.formula(Ytrain ~ .+Wilderness_Area_1:Elevation+"
"0","                    Wilderness_Area_2:Elevation+"
"0","                    Wilderness_Area_3:Elevation+"
"0","                    Wilderness_Area_4:Elevation+"
"0","                    Wilderness_Area_1:Slope+"
"0","                    Wilderness_Area_2:Slope+"
"0","                    Wilderness_Area_3:Slope+"
"0","                    Wilderness_Area_4:Slope+"
"0","                    Wilderness_Area_1:Horizontal_Distance_To_Fire_Points+"
"0","                    Wilderness_Area_2:Horizontal_Distance_To_Fire_Points+"
"0","                    Wilderness_Area_3:Horizontal_Distance_To_Fire_Points+"
"0","                    Wilderness_Area_4:Horizontal_Distance_To_Fire_Points+"
"0","                    Wilderness_Area_1:Horizontal_Distance_To_Roadways+"
"0","                    Wilderness_Area_2:Horizontal_Distance_To_Roadways+"
"0","                    Wilderness_Area_3:Horizontal_Distance_To_Roadways+"
"0","                    Wilderness_Area_4:Horizontal_Distance_To_Roadways,"
"0","                  cbind(Xtrain,Ytrain))"
"0","  "
"0","  f2 <- as.formula(Ytest ~ .+Wilderness_Area_1:Elevation+"
"0","                    Wilderness_Area_2:Elevation+"
"0","                    Wilderness_Area_3:Elevation+"
"0","                    Wilderness_Area_4:Elevation+"
"0","                    Wilderness_Area_1:Slope+"
"0","                    Wilderness_Area_2:Slope+"
"0","                    Wilderness_Area_3:Slope+"
"0","                    Wilderness_Area_4:Slope+"
"0","                    Wilderness_Area_1:Horizontal_Distance_To_Fire_Points+"
"0","                    Wilderness_Area_2:Horizontal_Distance_To_Fire_Points+"
"0","                    Wilderness_Area_3:Horizontal_Distance_To_Fire_Points+"
"0","                    Wilderness_Area_4:Horizontal_Distance_To_Fire_Points+"
"0","                    Wilderness_Area_1:Horizontal_Distance_To_Roadways+"
"0","                    Wilderness_Area_2:Horizontal_Distance_To_Roadways+"
"0","                    Wilderness_Area_3:Horizontal_Distance_To_Roadways+"
"0","                    Wilderness_Area_4:Horizontal_Distance_To_Roadways,"
"0","                  cbind(Xtest,Ytest))"
"0","  "
"0","  Xtrain_inter <- model.matrix(f, cbind(Xtrain,Ytrain))[, -1]"
"0","  Xtest_inter <- model.matrix(f2, cbind(Xtest,Ytest))[, -1]"
"0","  # formulation du modèle avec une pénalité lasso"
"0","  "
"0","  #Xtrain <- matrix(as.numeric(as.matrix(Xtrain)),nrow = nrow(Xtrain)) #pour un modèle sans intéractions"
"0","  mod <- cv.glmnet(Xtrain_inter,Ytrain, alpha=1,family = ""multinomial"")"
"0","  L_coeffs[[b]] <- coef(mod, s = ""lambda.min"") #on choisit la pénalité lasso optimale pour le modèle basé sur "
"0","  "
"0","  # prédictions du modèle"
"0","  prediction[,b] <- predict(mod, Xtest_inter,type = ""class"",s = ""lambda.min"")"
"0","  prediction[,(rep*2-b+1)] <- Ytest"
"0",""
"0",""
"0",""
"0","}"
"0",""
"0","T2<-Sys.time()"
"0",""
"0","(Tdiff= difftime(T2, T1))"
"1","Time difference of "
"1",""
"1","11.03826"
"1",""
"1"," "
"1",""
"1","mins"
"1",""
"1","
"
